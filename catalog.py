from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from database.database import async_session
from database.models import Gift


async def show_catalog(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    async with async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –ø–æ 10 —à—Ç—É–∫
        gifts = await session.execute(select(Gift).limit(10))
        gifts = gifts.scalars().all()

        keyboard = []
        for gift in gifts:
            keyboard.append([InlineKeyboardButton(
                f"{gift.name} - {gift.price}‚ÇΩ",
                callback_data=f"show_gift_{gift.id}"
            )])

        keyboard.append([InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")])

        await query.edit_message_text(
            "–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–¥–∞—Ä–∫–æ–≤:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )


async def show_gift_details(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    gift_id = int(query.data.split('_')[2])

    async with async_session() as session:
        gift = await session.get(Gift, gift_id)

        text = f"üéÅ {gift.name}\n\n"
        text += f"üí∞ –¶–µ–Ω–∞: {gift.price}‚ÇΩ\n"
        text += f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {gift.description}\n"
        text += f"üîó –°—Å—ã–ª–∫–∞: {gift.link}\n"

        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="show_catalog")]]

        await query.edit_message_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )